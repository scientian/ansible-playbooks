---

- name: Gather facts about all other ImageEngine hosts
  hosts: all
  tasks: []

- name: Deploy WIT Frontend
  hosts: wit-frontend
  remote_user: "{{ remote_user }}"
  become: no
  tasks:

  - name: Ensure wit-frontend data directory exists
    file: path=/u/data/wit-frontend/varnish/config owner=deploy group=deploy mode=0755 state=directory

  # HIT Frontends
  - name: Generate region-specific Varnish Backends config
    template: src=templates/frontend/backends.vcl.j2 dest=/u/data/wit-frontend/varnish/config/backends.vcl owner=deploy group=deploy mode=0644
    when: "'wit-frontend-miss' not in group_names"

  - name: Generate region-specific Varnish Selector config
    template: src=templates/frontend/selector.vcl.j2 dest=/u/data/wit-frontend/varnish/config/selector.vcl owner=deploy group=deploy mode=0644
    when: "'wit-frontend-miss' not in group_names"

  # MISS Frontends
  - name: Generate region-specific Varnish Backends config
    template: src=templates/frontend/miss-backends.vcl.j2 dest=/u/data/wit-frontend/varnish/config/backends.vcl owner=deploy group=deploy mode=0644
    when: "'wit-frontend-miss' in group_names"

  - name: Generate region-specific Varnish Selector config
    template: src=templates/frontend/miss-selector.vcl.j2 dest=/u/data/wit-frontend/varnish/config/selector.vcl owner=deploy group=deploy mode=0644
    when: "'wit-frontend-miss' in group_names"

  - name: Application | Git pull the latest code
    git: repo=git@github.com:ScientiaMobile/{{ project }}.git
      dest={{ source_path }}/{{ project }}
      accept_hostkey=yes
      force=yes
      version={{version}}

  - name: Application | Logger | Composer install
    composer: command=install working_dir={{ app_path }}/docker/logger/resources

  - name: Examine docker
    command: docker ps -fq name=frontend-varnish
    sudo: yes
    register: cont_list

  - name: Application | Reload Varnish Config
    command: docker exec -ti {{ project }}-varnish /u/apps/site/docker/varnish/resources/utils/reload_config.sh
    sudo: yes
    when: cont_list.stdout
