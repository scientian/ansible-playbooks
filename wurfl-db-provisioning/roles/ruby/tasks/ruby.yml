- name: Checks if target ruby is installed
  shell: cd; bash -lc "rbenv versions | grep {{ ruby.version }} | tr '*' ' ' | sed -e 's/\s\+//' | cut -f1 -d' '"
  # This is just a 'get' operation, so can't really change.
  # The rc from this shell does indicate to ansible that it's changed, so let's suppress that.
  # http://docs.ansible.com/playbooks_error_handling.html#overriding-the-changed-result
  changed_when: False
  register: ruby_is_installed
  become: yes
  become_user: "{{deploy_user}}"

- name: rbenv install {{ ruby.version }}
  shell: cd; bash -lc "MAKEOPTS={{ ruby.rbenv.makeopts }} CONFIGURE_OPTS=--disable-install-rdoc rbenv install {{ ruby.version }}"
  become: yes
  become_user: "{{deploy_user}}"
  when: ruby_is_installed.stdout != ruby.version

- name: set gemrc
  copy: src=gemrc dest=/home/{{deploy_user}}/.gemrc owner={{deploy_user}} group={{deploy_user}} mode=0644
  become: yes
  become_user: "{{deploy_user}}"
  when: ruby_is_installed.stdout != ruby.version

- name: set_global_ruby.version
  shell: cd; bash -lc "rbenv global {{ ruby.version }}"
  become: yes
  become_user: "{{deploy_user}}"
  when: ruby_is_installed.stdout != ruby.version

- name: install_bundler
  shell: cd; bash -lc "gem install bundle bundler"
  become: yes
  become_user: "{{deploy_user}}"
  when: ruby_is_installed.stdout != ruby.version

- name: rbenv | rehash
  shell: cd; bash -lc "rbenv rehash"
  become: yes
  become_user: "{{deploy_user}}"
  when: ruby_is_installed.stdout != ruby.version

