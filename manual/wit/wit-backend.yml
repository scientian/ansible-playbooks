---
- hosts: wit-backend

  sudo: yes

  vars_prompt:
    - name: "remote_user"
      prompt: "[Remote User] Username"
      private: no
    - name: "docker_hub_username"
      prompt: "[Docker Hub] Username"
      private: no
    - name: "docker_hub_password"
      prompt: "[Docker Hub] Password"
      private: yes
    - name: "docker_hub_email"
      prompt: "[Docker Hub] Email"
      private: no

  remote_user: "{{ remote_user }}"

  tasks:
  - name: General | Install required packages
    apt: pkg={{ item }} state=latest
    with_items:
      - python-apt
      - python-pip
      - php5-cli
      - curl

  - name: Download composer installer
    get_url: url="https://getcomposer.org/installer" dest=/tmp/composer.phar

  - name: Install composer
    command: /usr/bin/php /tmp/composer.phar --install-dir=/usr/local/bin  --filename=composer

  - name: General | Install docker-py
    pip: name=docker-py version=1.2.3

  # TODO Remove 777 permissions added temporary to fix ssh agent forwarding behaviour with sudo: https://github.com/ansible/ansible/issues/4378
  - name: Application | Create application dir
    file: path={{ source_path }}/{{ container }} state=directory owner={{ app_user }} group={{ app_group }} mode=0777

  # TODO Verify path, user and permissions
  - name: Application | Create Cache dir
    file: path=/tmp/image_cache state=directory owner={{ app_user }} group={{ app_group }} mode=0777

  - name: Application | Git pull the latest code
    git: repo=git@github.com:{{ org }}/{{ container }}.git
      dest={{ source_path }}/{{ container }}
      accept_hostkey=yes
      force=yes
    sudo: no

  - name: Application | Composer install
    composer: command=install working_dir={{ source_path }}/{{ container }}
    sudo: no

  # TODO Temporary fix since ansible (docker-py ?) does not allow to mount single files if it exists
  # see (https://github.com/ansible/ansible-modules-core/issues/1337). Update source code renaming web to public?
  - name: Application | Create symlink for the web dir
    shell: ln -s web public
    args:
      chdir: "{{ source_path }}/{{ container }}"

  - name: Docker | Data container
    docker:
      name: "{{container}}-data"
      image: ubuntu:14.04
      state: reloaded
      volumes:
        - "{{ source_path }}/{{ container }}:/u/apps/site"
        - /tmp/image_cache:/u/image_cache

  - name: Docker | Redis
    docker:
      name: "{{container}}-redis"
      image: redis:3
      state: reloaded

  - name: Docker | php fpm container
    docker:
      name: "{{container}}-php-fpm"
      image: scientiamobile/base.php-fpm
      state: reloaded
      email: "{{ docker_hub_email }}"
      username: "{{ docker_hub_username }}"
      password: "{{ docker_hub_password }}"
      volumes_from:
        - "{{container}}-data"
      links:
        - "{{container}}-redis:redis"

  - name: Docker | Nginx
    docker:
      name: "{{container}}-nginx"
      image: scientiamobile/base.nginx
      state: reloaded
      email: "{{ docker_hub_email }}"
      username: "{{ docker_hub_username }}"
      password: "{{ docker_hub_password }}"
      volumes_from:
        - "{{container}}-data"
      links:
        - "{{container}}-php-fpm:fcgi"
      ports:
        - "80:80"
